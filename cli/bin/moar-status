#!/bin/bash

set -e

dir=`pwd`
current=$(basename $dir)

max_length=0

for module in ~/modules/*; do
  cd $module

  branch="$(git rev-parse --abbrev-ref @{upstream} 2> /dev/null || true)"
  status="$(git status --short 2> /dev/null | wc -l | sed 's/ //g' || true)"
  ahead="$(git log --oneline $branch.. 2> /dev/null | wc -l | sed 's/ //g' || true)"
  behind="$(git log --oneline ..$branch 2> /dev/null | wc -l | sed 's/ //g' || true)"
  ahead_origin="$(git log --oneline origin/develop..$branch 2> /dev/null | wc -l | sed 's/ //g' || true)"
  behind_origin="$(git log --oneline $branch..origin/develop 2> /dev/null | wc -l | sed 's/ //g' || true)"
  vs_origin_master="$(git diff $branch..origin/master 2> /dev/null | wc -l | sed 's/ //g' || true)"

  status_bit=""
  if ! [ "$status" == "0" ]; then
    status_bit="$status"
  fi
  if ! [ "$ahead" == "0" ]; then
    if ! [ "$status" == "0" ]; then
      status_bit="${status_bit},"
    fi
    status_bit="${status_bit}${ahead}"
  fi
  if ! [ "$behind" == "0" ]; then
    if [ "$status" != "0" ] || [ "$ahead" != "0" ]; then
      status_bit="${status_bit},"
    fi
    status_bit="${status_bit}${behind}"
  fi
  if ! [ "$status_bit" == "" ]; then
    status_bit="($status_bit) "
  fi

  status_bit_origin=""
  if ! [ "$ahead_origin" == "0" ]; then
    status_bit="${status_bit_origin}${ahead_origin}"
  fi
  if ! [ "$behind_origin" == "0" ]; then
    if [ "$ahead_origin" != "0" ]; then
      status_bit_origin="${status_bit_origin},"
    fi
    status_bit_origin="${status_bit_origin}${behind_origin}"
  fi
  if ! [ "$status_bit_origin" == "" ]; then
    status_bit_origin="($status_bit_origin) "
  fi

  name="$(basename $module)"
  length=$(echo -n "$name $status_bit\> $branch $status_bit_origin" | wc -c)
  if [ ${length} -gt ${max_length} ]; then
    max_length=${length}
  fi
done

pad=$(printf '%0.1s' "-"{1..200})
padlength=${max_length}

magenta='\033[0;35m'
green='\033[0;32m'
red='\033[0;31m'
blue='\033[0;34m'
normal='\033[0m' # No Color

for module in ~/modules/*; do
  cd $module

  branch="$(git rev-parse --abbrev-ref @{upstream} 2> /dev/null || true)"
  status="$(git status --short 2> /dev/null | wc -l | sed 's/ //g' || true)"
  ahead="$(git log --oneline $branch.. 2> /dev/null | wc -l | sed 's/ //g' || true)"
  behind="$(git log --oneline ..$branch 2> /dev/null | wc -l | sed 's/ //g' || true)"
  ahead_origin="$(git log --oneline origin/develop..$branch 2> /dev/null | wc -l | sed 's/ //g' || true)"
  behind_origin="$(git log --oneline $branch..origin/develop 2> /dev/null | wc -l | sed 's/ //g' || true)"
  vs_origin_master="$(git diff $branch..origin/master 2> /dev/null | wc -l | sed 's/ //g' || true)"

  name="$(basename $module) "

  if [ "$(basename $module)" == "$current" ]; then
    printf "${magenta}%s${normal}" "$name"
  else
    printf '%s' "$name"
  fi

  status_bit=""
  if ! [ "$status" == "0" ]; then
    status_bit="$status"
  fi
  if ! [ "$ahead" == "0" ]; then
    if ! [ "$status" == "0" ]; then
      status_bit="${status_bit},"
    fi
    status_bit="${status_bit}${ahead}"
  fi
  if ! [ "$behind" == "0" ]; then
    if [ "$status" != "0" ] || [ "$ahead" != "0" ]; then
      status_bit="${status_bit},"
    fi
    status_bit="${status_bit}${behind}"
  fi
  if ! [ "$status_bit" == "" ]; then
    status_bit="($status_bit) "
    printf '('
    if ! [ "$status" == "0" ]; then
      printf "${blue}%s${normal}" "$status"
    fi
    if ! [ "$ahead" == "0" ]; then
      if ! [ "$status" == "0" ]; then
        printf ','
      fi
      printf "${green}%s${normal}" "$ahead"
    fi
    if ! [ "$behind" == "0" ]; then
      if [ "$status" != "0" ] || [ "$ahead" != "0" ]; then
        printf ','
      fi
      printf "${red}%s${normal}" "$behind"
    fi
    printf ') '
  fi

  name_status="$(basename $module) $status_bit"

  status_bit_origin=""
  if ! [ "$ahead_origin" == "0" ]; then
    status_bit_origin="${status_bit_origin}${ahead_origin}"
  fi
  if ! [ "$behind_origin" == "0" ]; then
    if [ "$ahead_origin" != "0" ]; then
      status_bit_origin="${status_bit_origin},"
    fi
    status_bit_origin="${status_bit_origin}${behind_origin}"
  fi
  if ! [ "$status_bit_origin" == "" ]; then
    status_bit_origin="($status_bit_origin) "
  fi
  if [ "${ahead_origin}${behind_origin}" != "" ]; then
    status_bit_origin="${status_bit_origin}()"
  fi

  printf '%*.*s' 0 $((padlength - ${#name_status} - ${#branch} - ${#status_bit_origin})) "$pad"

  if [ "$vs_origin_master" == "0" ]; then
    printf '> %s' "$branch"
  else
    printf "> ${red}%s${normal}" "$branch"
  fi

  if [ "$ahead_origin" != "0" ] || [ "$behind_origin" != "0" ]; then
    printf ' ('
  fi
  if ! [ "$ahead_origin" == "0" ]; then
    printf "${green}%s${normal}" "$ahead_origin"
  fi
  if ! [ "$behind_origin" == "0" ]; then
    if [ "$ahead_origin" != "0" ]; then
      printf ','
    fi
    printf "${red}%s${normal}" "$behind_origin"
  fi
  if [ "$ahead_origin" != "0" ] || [ "$behind_origin" != "0" ]; then
    printf ')'
  fi

  printf '\n'
  echo "$status $ahead $behind" > /dev/null

done