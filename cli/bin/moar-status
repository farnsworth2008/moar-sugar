#!/bin/bash

set -e

dir=`pwd`
current=$(basename $dir)

max_length=0

for module in ~/modules/*; do
  cd $module
  branch="$(git rev-parse --abbrev-ref @{upstream} 2> /dev/null || true)"
  ahead="$(git log --oneline $branch.. 2> /dev/null | wc -l | sed 's/ //g' || true)"
  behind="$(git log --oneline ..$branch 2> /dev/null | wc -l | sed 's/ //g' || true)"
  status="$(git status --short 2> /dev/null | wc -l | sed 's/ //g' || true)"
  branch="$branch"

  statusBit=""
  if ! [ "$status" == "0" ]; then
    statusBit="$status"
  fi
  if ! [ "$ahead" == "0" ]; then
    if ! [ "$status" == "0" ]; then
      statusBit="${statusBit},"
    fi
    statusBit="${statusBit}${ahead}"
  fi
  if ! [ "$behind" == "0" ]; then
    if [ "$status" != "0" ] || [ "$ahead" != "0" ]; then
      statusBit="${statusBit},"
    fi
    statusBit="${statusBit}${behind}"
  fi
  if ! [ "$statusBit" == "" ]; then
    statusBit="($statusBit) "
  fi

  name="$(basename $module)"
  length=$(echo -n "$name $statusBit\> $branch" | wc -c)
  if [ ${length} -gt ${max_length} ]; then
    max_length=${length}
  fi
done

pad=$(printf '%0.1s' "-"{1..200})
padlength=${max_length}

magenta='\033[0;35m'
green='\033[0;32m'
red='\033[0;31m'
blue='\033[0;34m'
normal='\033[0m' # No Color

for module in ~/modules/*; do
  cd $module
  branch="$(git rev-parse --abbrev-ref @{upstream} 2> /dev/null || true)"
  ahead="$(git log --oneline $branch.. 2> /dev/null | wc -l | sed 's/ //g' || true)"
  behind="$(git log --oneline ..$branch 2> /dev/null | wc -l | sed 's/ //g' || true)"
  status="$(git status --short 2> /dev/null | wc -l | sed 's/ //g' || true)"
  vs_master="$(git diff origin/master 2> /dev/null | wc -l | sed 's/ //g' || true)"
  branch="$branch"
  name="$(basename $module) "

  if [ "$(basename $module)" == "$current" ]; then
    printf "${magenta}%s${normal}" "$name"
  else
    printf '%s' "$name"
  fi

  statusBit=""
  if ! [ "$status" == "0" ]; then
    statusBit="$status"
  fi
  if ! [ "$ahead" == "0" ]; then
    if ! [ "$status" == "0" ]; then
      statusBit="${statusBit},"
    fi
    statusBit="${statusBit}${ahead}"
  fi
  if ! [ "$behind" == "0" ]; then
    if [ "$status" != "0" ] || [ "$ahead" != "0" ]; then
      statusBit="${statusBit},"
    fi
    statusBit="${statusBit}${behind}"
  fi
  if ! [ "$statusBit" == "" ]; then
    statusBit="($statusBit) "
    printf '('
    if ! [ "$status" == "0" ]; then
      printf "${blue}%s${normal}" "$status"
    fi
    if ! [ "$ahead" == "0" ]; then
      if ! [ "$status" == "0" ]; then
        printf ','
      fi
      printf "${green}%s${normal}" "$ahead"
    fi
    if ! [ "$behind" == "0" ]; then
      if [ "$status" != "0" ] || [ "$ahead" != "0" ]; then
        printf ','
      fi
      printf "${red}%s${normal}" "$behind"
    fi
    printf ') '
  fi

  name_status="$(basename $module) $statusBit"

  printf '%*.*s' 0 $((padlength - ${#name_status} - ${#branch} )) "$pad"

  if [ "$vs_master" == "0" ]; then
    printf '> %s' "$branch"
  else
    printf "> ${red}%s${normal}" "$branch"
  fi
  printf '\n'
  echo "$status $ahead $behind" > /dev/null

done